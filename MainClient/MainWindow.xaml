<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" xmlns:local="clr-namespace:Launcher" x:Name="wwind" x:Class="Launcher.MainWindow"
        Title="groove" Height="576" Width="1158" ResizeMode="CanResizeWithGrip" Background="#FF2E2E2E" BorderBrush="#FFEEEEEE" BorderThickness="2" Foreground="#FF777F8A" Icon="Resources/GroovifyLogoSmall.ico" AllowsTransparency="True" WindowStyle="None">
    <Window.Resources>
        <local:Theme x:Key="Theme"/>
        <!-- Fill Brushes -->
        <SolidColorBrush x:Key="NormalBrush" Color="#FF35810A"/>
        <SolidColorBrush x:Key="AlternationIndexBG" Color="#FF5C5C5C"/>

        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#FF919191">
        </SolidColorBrush>

        <SolidColorBrush x:Key="LightBrush" Color="#FFE21FC7"/>

        <LinearGradientBrush x:Key="HorizontalLightBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DarkBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0"/>
                    <GradientStop Color="#AAA" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0"/>
                    <GradientStop Color="#EEE" Offset="0.1"/>
                    <GradientStop Color="#EEE" Offset="0.9"/>
                    <GradientStop Color="#FFF" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />

        <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />

        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

        <!-- Border Brushes -->

        <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF3A3A3A">
        </SolidColorBrush>

        <LinearGradientBrush x:Key="HorizontalNormalBorderBrush" StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#CCC" Offset="0.0"/>
                    <GradientStop Color="#444" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="DefaultedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#777" Offset="0.0"/>
                    <GradientStop Color="#000" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="PressedBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#444" Offset="0.0"/>
                    <GradientStop Color="#888" Offset="1.0"/>
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

        <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />

        <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />

        <!-- Miscellaneous Brushes -->
        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

        <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />


        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Visibility" Value="Collapsed"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border 
          Name="Border"
          Margin="1" 
          CornerRadius="0" 
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}"
          BorderThickness="1">
                            <Path 
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="{StaticResource GlyphBrush}"
            Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border 
          CornerRadius="0" 
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="18"/>
                </Grid.RowDefinitions>
                <Border
      Grid.RowSpan="3"
      CornerRadius="0" 
      Background="#FFEEEEEE" Width="8" />
                <RepeatButton 
      Grid.Row="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineUpCommand"
      Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Width="8" 
      Name="PART_Track"
      Grid.Row="1"
      IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="0,0,0,0"  
          Background="{StaticResource HorizontalNormalBrush}"
          BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton 
      Grid.Row="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Height="18"
      Command="ScrollBar.LineDownCommand"
      Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="18"/>
                </Grid.ColumnDefinitions>
                <Border
      Grid.ColumnSpan="3"
      CornerRadius="0" 
      Background="#FF4D4DCF" />
                <RepeatButton 
      Grid.Column="0"                           
      Style="{StaticResource ScrollBarLineButton}"
      Width="10"
      Command="ScrollBar.LineLeftCommand"
      Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track 
      Name="PART_Track"
      Grid.Column="1"
      IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
          Style="{StaticResource ScrollBarThumb}" 
          Margin="0,1,0,1"  
          Background="{StaticResource NormalBrush}"
          BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
          Style="{StaticResource ScrollBarPageButton}"
          Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton 
      Grid.Column="3" 
      Style="{StaticResource ScrollBarLineButton}"
      Width="10"
      Command="ScrollBar.LineRightCommand"
      Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="8"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="8"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Visibility="Collapsed"/>
                                <Themes:ClassicBorderDecorator x:Name="TrackBackground" BorderBrush="#FF81CF2B" BorderThickness="2" BorderStyle="Sunken" Height="4" Margin="0,0,0,1" Grid.Row="1" Background="#FFA04242">
                                    <Canvas Margin="-2">
                                        <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4" Visibility="Hidden"/>
                                    </Canvas>
                                </Themes:ClassicBorderDecorator>
                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="Slider.DecreaseLarge">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border Background="{TemplateBinding Background}"/>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="Slider.IncreaseLarge" HorizontalAlignment="Left" Width="580">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border Background="{TemplateBinding Background}"/>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Foreground="#FF81CF2B">
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Foreground" Value="{x:Null}"/>
                                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                    <Setter Property="Height" Value="21"/>
                                                    <Setter Property="Width" Value="11"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Themes:ClassicBorderDecorator BorderBrush="#00000000" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}">
                                                                    <Rectangle x:Name="ForegroundRect" Fill="{TemplateBinding Foreground}" Margin="-1" Opacity="0.5"/>
                                                                </Themes:ClassicBorderDecorator>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsDragging" Value="True">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Style" TargetName="Thumb">
                                    <Setter.Value>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="Foreground" Value="{x:Null}"/>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            <Setter Property="Height" Value="21"/>
                                            <Setter Property="Width" Value="11"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Canvas SnapsToDevicePixels="True">
                                                            <Path Data="M11,21L0,21 0,6 5,1 6,1 11,6z" Fill="{TemplateBinding Background}"/>
                                                            <Path Data="M0.5,20L0.5,5.5 5,0.5 5.5,0.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M5.5,0.5L6,0.5 10.5,5.5 10.5,20.5 0,20.5" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M1.5,19L1.5,5.5 5,1.5 5.5,1.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M5.5,1.5L6,1.5 9.5,5.5 9.5,19.5 1,19.5" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M9,19L2,19 2,6 5.5,2 9,6z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                                                        </Canvas>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsDragging" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="0,3,0,0"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                <Setter Property="Style" TargetName="Thumb">
                                    <Setter.Value>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="Foreground" Value="{x:Null}"/>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            <Setter Property="Height" Value="21"/>
                                            <Setter Property="Width" Value="11"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Canvas SnapsToDevicePixels="True">
                                                            <Path Data="M11,0L0,0 0,15 5,21 6,21 11,15z" Fill="{TemplateBinding Background}"/>
                                                            <Path Data="M10,0.5L0.5,0.5 0.5,15.5 5,20.5 5.5,20.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M5.5,20.5L6,20.5 10.5,15.5 10.5,0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M9,1.5L1.5,1.5 1.5,15.5 5,19.5 5.5,19.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M5.5,19.5L6,19.5 9.5,15.5 9.5,1" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M9,2L2,2 2,15 5.5,19 9,15z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                                                        </Canvas>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsDragging" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="0,0,0,3"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Slider}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <TickBar x:Name="LeftTick" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
                                        <Themes:ClassicBorderDecorator x:Name="TrackBackground" BorderBrush="#00000000" BorderThickness="2" BorderStyle="Sunken" Grid.Column="1" Margin="0,0,1,0" Width="4">
                                            <Canvas Margin="-2">
                                                <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4"/>
                                            </Canvas>
                                        </Themes:ClassicBorderDecorator>
                                        <Track x:Name="PART_Track" Grid.Column="1">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="Slider.DecreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border Background="{TemplateBinding Background}"/>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="Slider.IncreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border Background="{TemplateBinding Background}"/>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Foreground" Value="{x:Null}"/>
                                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                            <Setter Property="Width" Value="21"/>
                                                            <Setter Property="Height" Value="11"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Themes:ClassicBorderDecorator BorderBrush="#00000000" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}">
                                                                            <Rectangle Fill="{TemplateBinding Foreground}" Margin="-1" Opacity="0.5"/>
                                                                        </Themes:ClassicBorderDecorator>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                        <TickBar x:Name="RightTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Grid.RowSpan="3" Visibility="Collapsed" Width="4"/>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TickPlacement" Value="TopLeft">
                                        <Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
                                        <Setter Property="Style" TargetName="Thumb">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Foreground" Value="{x:Null}"/>
                                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                    <Setter Property="Width" Value="21"/>
                                                    <Setter Property="Height" Value="11"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Canvas SnapsToDevicePixels="True">
                                                                    <Path Data="M21,11L21,0 6,0 0,5 0,6 6,11z" Fill="{TemplateBinding Background}"/>
                                                                    <Path Data="M20,0.5L5.5,0.5 0.5,5 0.5,5.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M0.5,5.5L0.5,6 5.5,10.5 20.5,10.5 20.5,0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M19,1.5L5.5,1.5 1.5,5 1.5,5.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M1.5,5.5L1.5,6 5.5,9.5 19.5,9.5 19.5,1" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M19,9L19,2 6,2 2,5.5 6,9z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                                                                </Canvas>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsDragging" Value="True">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Margin" TargetName="TrackBackground" Value="3,0,0,0"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="BottomRight">
                                        <Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
                                        <Setter Property="Style" TargetName="Thumb">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Foreground" Value="{x:Null}"/>
                                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                    <Setter Property="Width" Value="21"/>
                                                    <Setter Property="Height" Value="11"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Canvas SnapsToDevicePixels="True">
                                                                    <Path Data="M0,11L0,0 15,0 21,5 21,6 15,11z" Fill="{TemplateBinding Background}"/>
                                                                    <Path Data="M0.5,10L0.5,0.5 15.5,0.5 20.5,5 20.5,5.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M20.5,5.5L20.5,6 15.5,10.5 0,10.5" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M1.5,9L1.5,1.5 15.5,1.5 19.5,5 19.5,5.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M19.5,5.5L19.5,6 15.5,9.5 1,9.5" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M2,9L2,2 15,2 19,5.5 15,9" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                                                                </Canvas>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsDragging" Value="True">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Margin" TargetName="TrackBackground" Value="0,0,3,0"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="Both">
                                        <Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
                                        <Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SliderStyle2" TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Visibility="Collapsed"/>
                                <Themes:ClassicBorderDecorator x:Name="TrackBackground" BorderBrush="#FF7A828F" BorderThickness="2" BorderStyle="None" Height="4" Margin="0,0,0,1" Grid.Row="1" Background="#FF7A828F">
                                    <Canvas Margin="-2">
                                        <Rectangle x:Name="PART_SelectionRange" Fill="#FF7A828F" Height="4" Visibility="Hidden"/>
                                    </Canvas>
                                </Themes:ClassicBorderDecorator>
                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="Slider.DecreaseLarge">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border Background="{TemplateBinding Background}"/>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="Slider.IncreaseLarge" HorizontalAlignment="Left" Width="580" Margin="0">
                                            <RepeatButton.Style>
                                                <Style TargetType="{x:Type RepeatButton}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="IsTabStop" Value="False"/>
                                                    <Setter Property="Focusable" Value="False"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                <Border Background="{TemplateBinding Background}"/>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </RepeatButton.Style>
                                        </RepeatButton>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Foreground="{x:Null}">
                                            <Thumb.Style>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Foreground" Value="{x:Null}"/>
                                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                    <Setter Property="Height" Value="21"/>
                                                    <Setter Property="Width" Value="12"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Themes:ClassicBorderDecorator BorderBrush="#00000000" BorderThickness="3" BorderStyle="AltRaised" Background="{TemplateBinding Background}">
                                                                    <Border CornerRadius="5" x:Name="test" Background="#FF88D338" Margin="-1" Opacity="0.5"/>
                                                                </Themes:ClassicBorderDecorator>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsDragging" Value="True">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Thumb.Style>
                                        </Thumb>
                                    </Track.Thumb>
                                </Track>
                                <TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TickPlacement" Value="TopLeft">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Style" TargetName="Thumb">
                                    <Setter.Value>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="Foreground" Value="{x:Null}"/>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            <Setter Property="Height" Value="21"/>
                                            <Setter Property="Width" Value="11"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Canvas SnapsToDevicePixels="True">
                                                            <Path Data="M11,21L0,21 0,6 5,1 6,1 11,6z" Fill="{TemplateBinding Background}"/>
                                                            <Path Data="M0.5,20L0.5,5.5 5,0.5 5.5,0.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M5.5,0.5L6,0.5 10.5,5.5 10.5,20.5 0,20.5" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M1.5,19L1.5,5.5 5,1.5 5.5,1.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M5.5,1.5L6,1.5 9.5,5.5 9.5,19.5 1,19.5" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M9,19L2,19 2,6 5.5,2 9,6z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                                                        </Canvas>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsDragging" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="0,3,0,0"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="BottomRight">
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                                <Setter Property="Style" TargetName="Thumb">
                                    <Setter.Value>
                                        <Style TargetType="{x:Type Thumb}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="Foreground" Value="{x:Null}"/>
                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                            <Setter Property="Height" Value="21"/>
                                            <Setter Property="Width" Value="11"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Canvas SnapsToDevicePixels="True">
                                                            <Path Data="M11,0L0,0 0,15 5,21 6,21 11,15z" Fill="{TemplateBinding Background}"/>
                                                            <Path Data="M10,0.5L0.5,0.5 0.5,15.5 5,20.5 5.5,20.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M5.5,20.5L6,20.5 10.5,15.5 10.5,0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M9,1.5L1.5,1.5 1.5,15.5 5,19.5 5.5,19.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M5.5,19.5L6,19.5 9.5,15.5 9.5,1" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1"/>
                                                            <Path Data="M9,2L2,2 2,15 5.5,19 9,15z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                                                        </Canvas>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsDragging" Value="True">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Margin" TargetName="TrackBackground" Value="0,0,0,3"/>
                            </Trigger>
                            <Trigger Property="TickPlacement" Value="Both">
                                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Slider}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="{TemplateBinding Height}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>
                                        <TickBar x:Name="LeftTick" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
                                        <Themes:ClassicBorderDecorator x:Name="TrackBackground" BorderBrush="#00000000" BorderThickness="2" BorderStyle="Sunken" Grid.Column="1" Margin="0,0,1,0" Width="4">
                                            <Canvas Margin="-2">
                                                <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Visibility="Hidden" Width="4"/>
                                            </Canvas>
                                        </Themes:ClassicBorderDecorator>
                                        <Track x:Name="PART_Track" Grid.Column="1">
                                            <Track.DecreaseRepeatButton>
                                                <RepeatButton Command="Slider.DecreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border Background="{TemplateBinding Background}"/>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.DecreaseRepeatButton>
                                            <Track.IncreaseRepeatButton>
                                                <RepeatButton Command="Slider.IncreaseLarge">
                                                    <RepeatButton.Style>
                                                        <Style TargetType="{x:Type RepeatButton}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="IsTabStop" Value="False"/>
                                                            <Setter Property="Focusable" Value="False"/>
                                                            <Setter Property="Background" Value="Transparent"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                        <Border Background="{TemplateBinding Background}"/>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </RepeatButton.Style>
                                                </RepeatButton>
                                            </Track.IncreaseRepeatButton>
                                            <Track.Thumb>
                                                <Thumb x:Name="Thumb">
                                                    <Thumb.Style>
                                                        <Style TargetType="{x:Type Thumb}">
                                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                            <Setter Property="Foreground" Value="{x:Null}"/>
                                                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                            <Setter Property="Width" Value="21"/>
                                                            <Setter Property="Height" Value="11"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                                        <Themes:ClassicBorderDecorator BorderBrush="#00000000" BorderThickness="3" BorderStyle="Raised" Background="{TemplateBinding Background}">
                                                                            <Rectangle Fill="{TemplateBinding Foreground}" Margin="-1" Opacity="0.5"/>
                                                                        </Themes:ClassicBorderDecorator>
                                                                        <ControlTemplate.Triggers>
                                                                            <Trigger Property="IsDragging" Value="True">
                                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                            </Trigger>
                                                                            <Trigger Property="IsEnabled" Value="False">
                                                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                            </Trigger>
                                                                        </ControlTemplate.Triggers>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Thumb.Style>
                                                </Thumb>
                                            </Track.Thumb>
                                        </Track>
                                        <TickBar x:Name="RightTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Grid.RowSpan="3" Visibility="Collapsed" Width="4"/>
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TickPlacement" Value="TopLeft">
                                        <Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
                                        <Setter Property="Style" TargetName="Thumb">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="Foreground" Value="{x:Null}"/>
                                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                    <Setter Property="Width" Value="21"/>
                                                    <Setter Property="Height" Value="11"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Canvas SnapsToDevicePixels="True">
                                                                    <Path Data="M21,11L21,0 6,0 0,5 0,6 6,11z" Fill="{TemplateBinding Background}"/>
                                                                    <Path Data="M20,0.5L5.5,0.5 0.5,5 0.5,5.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M0.5,5.5L0.5,6 5.5,10.5 20.5,10.5 20.5,0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M19,1.5L5.5,1.5 1.5,5 1.5,5.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M1.5,5.5L1.5,6 5.5,9.5 19.5,9.5 19.5,1" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M19,9L19,2 6,2 2,5.5 6,9z" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                                                                </Canvas>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsDragging" Value="True">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Margin" TargetName="TrackBackground" Value="3,0,0,0"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="BottomRight">
                                        <Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
                                        <Setter Property="Style" TargetName="Thumb">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type Thumb}">
                                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="Foreground" Value="{x:Null}"/>
                                                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                    <Setter Property="Width" Value="21"/>
                                                    <Setter Property="Height" Value="11"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                                <Canvas SnapsToDevicePixels="True">
                                                                    <Path Data="M0,11L0,0 15,0 21,5 21,6 15,11z" Fill="{TemplateBinding Background}"/>
                                                                    <Path Data="M0.5,10L0.5,0.5 15.5,0.5 20.5,5 20.5,5.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M20.5,5.5L20.5,6 15.5,10.5 0,10.5" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M1.5,9L1.5,1.5 15.5,1.5 19.5,5 19.5,5.5" Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M19.5,5.5L19.5,6 15.5,9.5 1,9.5" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1"/>
                                                                    <Path Data="M2,9L2,2 15,2 19,5.5 15,9" Fill="{TemplateBinding Foreground}" Opacity="0.5"/>
                                                                </Canvas>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsDragging" Value="True">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="False">
                                                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Margin" TargetName="TrackBackground" Value="0,0,3,0"/>
                                    </Trigger>
                                    <Trigger Property="TickPlacement" Value="Both">
                                        <Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
                                        <Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsSelectionRangeEnabled" Value="True">
                                        <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid x:Name="PlaylistPanel" Background="#FFA27C7C">

        <Grid x:Name="Player" Background="#FFEEEEEE">
            <ListView ScrollViewer.HorizontalScrollBarVisibility="Disabled" MaxWidth="250" x:Name="Playlists" BorderBrush="{x:Null}" BorderThickness="0,0,2,0" Margin="0,103,0,226" MinWidth="80" Background="#FFEEEEEE" MouseUp="Playlists_MouseUp" HorizontalAlignment="Left" Width="200" SelectionChanged="Playlists_SelectionChanged" DragEnter="Playlists_DragEnter" Drop="Playlists_Drop" KeyUp="Playlists_KeyUp" MouseDoubleClick="Playlists_MouseDoubleClick" Foreground="#FFC3C3C3" Grid.ColumnSpan="2">
                <ListView.Resources>
                    <Style TargetType="{x:Type GridViewColumnHeader}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </Style>
                    <Style TargetType="{x:Type ListViewItem}" x:Name="PlaylistItemStyle">
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{Binding Source={StaticResource Theme}, Path=PlaylistHBrush}"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#FF35800A"/>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                        </Style.Resources>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderThickness="5,2,0,2" Padding="0">
                                        <Grid>
                                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" Value="{Binding Source={StaticResource Theme}, Path=SongItemBG}"></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Padding" Value="5,3,2,3"/>
                        <Setter Property="BorderThickness" Value="0,0,0,0"/>
                        <Setter Property="BorderBrush" Value="Gray"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="Background" Value="#FF35800A"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{Binding Source={StaticResource Theme}, Path=PlaylistHBrush}"></Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView x:Name="PlaylistColumns">
                        <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Playlist" Width="100"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <MediaElement Grid.Column="1" Margin="428,236,528,236"/>
            <MediaElement x:Name="player" Grid.Column="1" Margin="428,236,528,236"/>
            <ListView AllowDrop="True" AlternationCount="2" ScrollViewer.VerticalScrollBarVisibility="Visible" ScrollViewer.HorizontalScrollBarVisibility="Disabled" x:Name="Songs" BorderBrush="#FFE22020" BorderThickness="0" Foreground="#FF7B7B7B" Background="#FFFAFAFA" Margin="200,78,0,0" MouseLeftButtonUp="Songs_MouseLeftButtonUp" MouseMove="Songs_MouseMove" PreviewMouseLeftButtonDown="Songs_PreviewMouseLeftButtonDown" PreviewMouseMove="Songs_PreviewMouseMove" PreviewMouseLeftButtonUp="Songs_PreviewMouseLeftButtonUp" KeyUp="Songs_KeyUp" SelectionChanged="Songs_SelectionChanged" Drop="Songs_Drop" DragEnter="Songs_DragEnter">
                <ListView.Resources>


                    <Style TargetType="{x:Type GridViewColumnHeader}" x:Name="SongsColStyle">
                        <Setter Property="Visibility" Value="Visible" />
                        <Setter Property="Background" Value="#FFFAFAFA"/>
                        <Setter Property="BorderBrush" Value="Black"/>
                        <Setter Property="BorderThickness" Value="0,0,0,0"/>
                        <Setter Property="Foreground" Value="#FFC1C1C1"/>
                        <Setter Property="Height" Value="30"></Setter>
                    </Style>

                    <Style TargetType="{x:Type ListViewItem}" x:Name="SongItemStyle">

                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Binding.XmlNamespaceManager="{Binding ElementName=Songs}" Color="#FFCCCCCC" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                        </Style.Resources>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderThickness="5,2,0,2" Padding="0">
                                        <Grid>
                                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Background" Value="#FFE9E9E9"></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex"  Value="0">

                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="FontWeight" Value="Bold"/>

                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#FFEEEEEE"></Setter>
                            </Trigger>
                        </Style.Triggers>

                        <!-- These triggers react to changes in the attached properties set during a managed drag-drop operation. -->
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView x:Name="SongColumns">
                        <GridViewColumn DisplayMemberBinding="{Binding Name}" Header="Song" Width="250"/>
                        <GridViewColumn DisplayMemberBinding="{Binding Artist}" Header="Artist" Width="250"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <Grid x:Name="TopPanel" Height="78" VerticalAlignment="Top" Background="#FFEEEEEE" Grid.ColumnSpan="2">
                <Border CornerRadius="2" BorderThickness="1" Height="27" Margin="0,25,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="206" Background="#FFFDFDFD" BorderBrush="#FFEEEEEE">
                    <Grid>
                        <TextBox VerticalContentAlignment="Center" x:Name="SearchBox" TextWrapping="Wrap" Text="Search" Margin="31,-1,0,2" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}" KeyDown="SearchBox_KeyDown" Foreground="#FF777F8A" GotFocus="SearchBox_GotFocus" LostFocus="SearchBox_LostFocus" FontSize="18" TextChanged="SearchBox_TextChanged"/>
                        <Image Height="15" Margin="10,5,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="15" Source="Resources/search.png"/>
                    </Grid>
                </Border>
                <Image x:Name="PlayButton" HorizontalAlignment="Left" Height="27" Margin="65,24,0,0" VerticalAlignment="Top" Width="27" MouseDown="PlayButton_MouseDown" MouseEnter="PlayButton_MouseEnter" MouseLeave="PlayButton_MouseLeave">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="Resources/GroovifyPlay_dark.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="Resources/GroovifyPlay.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Image x:Name="NextButton" HorizontalAlignment="Left" Height="17" Margin="115,29,0,0" VerticalAlignment="Top" Width="17" MouseDown="NextButton_MouseDown">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="Resources/GroovifyNext_drak.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="Resources/GroovifyNext.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Image HorizontalAlignment="Left" Height="17" Margin="20,29,0,0" VerticalAlignment="Top" Width="16" MouseDown="Image_MouseDown">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="Resources/GroovifyPrev_dark.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="Resources/GroovifyPrev.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Label x:Name="CurrentlyPlayingLabel" Content="   " HorizontalContentAlignment="Center" Margin="316,10,239,0" VerticalAlignment="Top" Foreground="#FF7B7B7B" MouseLeftButtonDown="CurrentlyPlayingLabel_MouseLeftButtonDown" FontSize="14"/>
                <Ellipse x:Name="Min" Fill="#FFA2A6AF" Height="10" Margin="0,4,40,0" VerticalAlignment="Top" MouseLeftButtonDown="Hide_LeftButtonDown" MouseLeave="Min_MouseLeave" MouseEnter="Min_MouseEnter" HorizontalAlignment="Right" Width="10"/>
                <Ellipse x:Name="Close" Height="10" Margin="0,4,10,0" VerticalAlignment="Top" MouseLeftButtonDown="Ellipse_MouseLeftButtonDown" Fill="#FFA2A6AF" MouseEnter="Close_MouseEnter" MouseLeave="Close_MouseLeave" HorizontalAlignment="Right" Width="10">
                    <Ellipse.Style>
                        <Style/>
                    </Ellipse.Style>
                </Ellipse>
                <Image x:Name="ShuffleButton" HorizontalAlignment="Left" Margin="108,549,0,-487" Width="16" MouseEnter="ShuffleButton_MouseEnter" MouseLeave="ShuffleButton_MouseLeave" MouseDown="ShuffleButton_MouseDown">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}" x:Name="ShuffleStyle">
                            <Setter Property="Source" Value="Resources/GroovifyShuffle_dark.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="Resources/GroovifyShuffle.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <local:ProgressControl x:Name="progress" Height="6" Margin="356,56,312,0" VerticalAlignment="Top" Width="Auto" MouseLeftButtonUp="progress_MouseLeftButtonUp" PreviewMouseLeftButtonUp="progress_PreviewMouseLeftButtonUp"/>
                <local:Volume x:Name="VolumeControl" Margin="186,36,0,0" VerticalAlignment="Top" Height="4" Width="109" HorizontalAlignment="Left"/>
                <Ellipse x:Name="State" Fill="#FFA2A6AF" Height="10" Margin="0,4,25,0" VerticalAlignment="Top" MouseLeave="state_MouseLeave" MouseEnter="state_MouseEnter" HorizontalAlignment="Right" Width="10" MouseLeftButtonDown="State_MouseLeftButtonDown"/>
                <Image x:Name="Speaker" HorizontalAlignment="Left" Margin="166,30,0,0" Width="16" Height="16" VerticalAlignment="Top" Source="Resources/SpeakerH.png">
                    <Image.Style>
                        <Style TargetType="{x:Type Image}" x:Name="ShuffleStyle1">
                            <Setter Property="Source" Value="Resources/SpeakerH.png"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Source" Value="Resources/GroovifyShuffle.png"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Label x:Name="CurrentTimeLabel" Content="0:00" HorizontalAlignment="Left" Margin="316,45,0,0" VerticalAlignment="Top" Width="37"/>
                <Label x:Name="CurrentTimeLeftLabel" Content="0:00" HorizontalAlignment="Right" Margin="0,45,268,0" VerticalAlignment="Top" Width="37"/>
                <Label x:Name="CurrentlyPlayingLabel2" Content="   " HorizontalContentAlignment="Center" Margin="316,31,239,0" VerticalAlignment="Top" Foreground="#FF7B7B7B" MouseLeftButtonDown="CurrentlyPlayingLabel_MouseLeftButtonDown"/>
            </Grid>
            <Border x:Name="Cover" CornerRadius="2" BorderThickness="1" HorizontalAlignment="Left" Height="200" VerticalAlignment="Bottom" Width="200" Margin="0,0,0,26" MouseLeftButtonUp="Cover_MouseLeftButtonUp" PreviewMouseLeftButtonUp="Cover_PreviewMouseLeftButtonUp" MouseLeftButtonDown="Cover_MouseLeftButtonDown" MouseMove="Cover_MouseMove" Grid.ColumnSpan="2">
                <Border.Background>
                    <ImageBrush ImageSource="http://images.gs-cdn.net/static/albums/200_album.jpg"/>
                </Border.Background>
            </Border>
            <Image x:Name="RepeatButton" HorizontalAlignment="Left" Margin="47,0,0,6" Width="16" Height="16" VerticalAlignment="Bottom" MouseEnter="RepeatButton_MouseEnter" MouseLeave="RepeatButton_MouseLeave" MouseDown="RepeatButton_MouseDown">
                <Image.Style>
                    <Style TargetType="{x:Type Image}" x:Name="RepeatStyle">
                        <Setter Property="Source" Value="Resources/GroovifyRepeat_dark.png"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources/GroovifyRepeat.png"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Grid>
        <Border x:Name="NewPlaylistHolder" Margin="0,78,0,0" BorderThickness="0,0,2,0" HorizontalAlignment="Left" Width="201" Height="27" VerticalAlignment="Top" Background="#FFEEEEEE" Grid.ColumnSpan="2">
            <Grid Margin="1,0,-1,5">
                <TextBox x:Name="NewPlaylistBox" TextWrapping="Wrap" Text="New playlist" Margin="9,4,0,0" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}" Foreground="#FF777F8A" KeyUp="NewPlaylistBox_KeyUp" HorizontalAlignment="Left" Width="190" Height="18" VerticalAlignment="Top" GotFocus="NewPlaylistBox_GotFocus" LostFocus="NewPlaylistBox_LostFocus"/>
                <Label Content="+" Margin="-4,-3,183,-3" FontSize="16" Foreground="#FF7A828F"/>
            </Grid>
        </Border>
    </Grid>
</Window>
